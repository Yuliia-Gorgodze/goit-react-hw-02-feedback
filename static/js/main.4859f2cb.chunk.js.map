{"version":3,"sources":["Components/Statistic.js","Components/Notification.js","Components/FetbakOptions.js","Components/SectionTitle.js","App.js","index.js","Components/fetback.module.css"],"names":["Statistic","options","procentFetback","nameFetback","Object","keys","map","fetback","Notification","message","FetbackOptions","incriment","button","class","styles","butoon_fetback","onClick","SectionTitle","state","good","neutral","bad","App","incrimentFetback","setState","prevState","result","isNaN","this","Component","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"+PAeeA,EAZG,SAAC,GAA+B,IAA9BC,EAA6B,EAA7BA,QAASC,EAAoB,EAApBA,eACnBC,EAAcC,OAAOC,KAAKJ,GACnC,OACC,gCACE,8FACD,6BACEE,EAAYG,KAAI,SAAAC,GAAO,OAAI,+BAAoBA,EAApB,MAAgCN,EAAQM,KAA/BA,QAErC,uIAA2BL,WCHhBM,EANO,SAAC,GAAe,IAAdC,EAAa,EAAbA,QAErB,OACA,+BAAOA,K,gBCQMC,EAVS,SAAC,GAA0B,IAAzBT,EAAwB,EAAxBA,QAASU,EAAe,EAAfA,UAIhC,OAFoBP,OAAOC,KAAKJ,GAGbK,KAAI,SAAAM,GAAM,OAAI,wBACxBC,MAAOC,IAAOC,eACdC,QAAS,kBAAML,EAAUC,IAFD,SAEWA,GAFEA,OCKlCK,EATK,SAAC,GAAwB,IAAvBC,EAAsB,EAAtBA,MAAOP,EAAe,EAAfA,UACGO,EAAtBC,KAAsBD,EAAhBE,QAAgBF,EAAPG,IACtB,OACC,oCACI,0IACA,cAAC,EAAD,CAAepB,QAASiB,EAAOP,UAAWA,QC+BnCW,E,4MAjCZJ,MAAQ,CACJC,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAETE,iBAAkB,SAAChB,GACf,EAAKiB,UAAS,SAAAC,GAAS,sBAClBlB,EAAUkB,EAAWlB,GAAU,O,EAKxCL,eAAkB,WACd,IAAMwB,EAAS,EAAKR,MAAMC,MAAQ,EAAKD,MAAMC,KAAO,EAAKD,MAAMG,KAAO,IACtE,OAAGM,MAAMD,GAEC,iHAEA,GAAN,OAAUA,EAAV,M,4CAIP,WAAS,IAAD,EACwBE,KAAKV,MAA3BC,EADF,EACEA,KAAMC,EADR,EACQA,QAASC,EADjB,EACiBA,IACrB,OACI,gCACI,cAAC,EAAD,CAAcH,MAAOU,KAAKV,MAAOP,UAAWiB,KAAKL,mBAC/CJ,EAAO,GAAKC,EAAU,GAAKC,EAAM,EAAK,8BACxC,cAAC,EAAD,CAAWpB,QAAS2B,KAAKV,MAAOhB,eAAgB0B,KAAK1B,mBAA0B,cAAC,EAAD,CAAcO,QAAS,6B,GA7BpGoB,a,MCAnBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U,kBCT1BC,EAAOC,QAAU,CAAC,eAAiB,mC","file":"static/js/main.4859f2cb.chunk.js","sourcesContent":["import React from 'react';\r\nimport propTypes from 'prop-types';\r\n\r\nconst Statistic = ({options, procentFetback}) => {\r\n    const nameFetback = Object.keys(options);\r\n return (\r\n  <div>\r\n    <h2>Статистика</h2>\r\n   <ul>\r\n    {nameFetback.map(fetback => <li key={fetback} >{fetback} : {options[fetback]}</li>)}\r\n   </ul>\r\n   {<span>Позитивные отзывы: { procentFetback()}</span>}\r\n   </div>\r\n )\r\n}\r\nexport default Statistic;\r\n\r\nStatistic.propTypes={\r\n  options: propTypes.objectOf(propTypes.number),\r\n  procentFetback: propTypes.func.isRequired\r\n\r\n}","import React from 'react';\r\n\r\nconst Notification =  ({message}) => {\r\n \r\n   return(\r\n   <span>{message}</span>\r\n    )\r\n}\r\nexport default Notification;\r\n","import React from 'react';\r\nimport styles from './fetback.module.css';\r\nimport propTypes from 'prop-types';\r\n const FetbackOptions =  ({options, incriment}) => {\r\n\r\n     const nameButton = Object.keys(options);\r\n    \r\n    return(\r\n            nameButton.map(button => <button key={button}\r\n             class={styles.butoon_fetback}\r\n             onClick={() => incriment(button)}>{button}</button>)\r\n     )\r\n }\r\n export default FetbackOptions;\r\n\r\n FetbackOptions.propTypes ={\r\n  options: propTypes.objectOf(propTypes.number),\r\n  incriment: propTypes.func.isRequired\r\n }","import React from 'react';\r\nimport FetbackButton from './FetbakOptions'\r\n\r\n\r\nconst SectionTitle=  ({state, incriment}) => {\r\n    const {good, neutral, bad} = state\r\n    return(\r\n     <section>\r\n         <h1>Оставьте свой отзыв</h1>\r\n         <FetbackButton options={state} incriment={incriment} />\r\n     </section>\r\n     )\r\n }\r\n export default SectionTitle;\r\n ","import React, {Component} from 'react';\r\n\r\nimport Statistic from './Components/Statistic'\r\nimport Notification from './Components/Notification'\r\nimport SectionTitle from './Components/SectionTitle'\r\n\r\n class App extends Component{\r\n    state = {\r\n        good: 0,\r\n        neutral: 0,\r\n        bad: 0\r\n      }\r\n    incrimentFetback =(fetback)=>{\r\n        this.setState(prevState => ({   \r\n            [fetback]: prevState.[fetback] +1\r\n     \r\n        }))   \r\n         \r\n    }\r\n    procentFetback  = () => {\r\n        const result = this.state.good / (this.state.good + this.state.bad) * 100 ;\r\n        if(isNaN(result)){\r\n            \r\n            return `нужно больше отзывов`\r\n        }else{\r\n            return `${result}%`\r\n        }\r\n       \r\n    }\r\n     render(){\r\n        const {good, neutral, bad} = this.state\r\n         return(\r\n             <div>\r\n                 <SectionTitle state={this.state} incriment={this.incrimentFetback}/>\r\n                 {(good > 0 || neutral > 0 || bad > 0) ? <div>\r\n                 <Statistic options={this.state} procentFetback={this.procentFetback}/></div> : <Notification message={'No feetback given'}/>}\r\n             </div> \r\n         )\r\n     }\r\n }\r\n export default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'modern-normalize'\nimport App from './App';\nimport styles from './base.css'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"butoon_fetback\":\"fetback_butoon_fetback__36s1X\"};"],"sourceRoot":""}